# =============================================================================
# RFID QR Wareneingang - Electron Builder Konfiguration
# =============================================================================

# App Metadaten
appId: com.shirtful.rfid-qr-wareneingang
productName: "RFID QR Wareneingang"
copyright: "Copyright © 2024 Shirtful GmbH"

# Verzeichnisse
directories:
  output: dist
  buildResources: build

# Dateien die in die App gepackt werden
files:
  - "main.js"
  - "preload.js"
  - "package.json"
  - "renderer/**/*"
  - "rfid/**/*"
  - "db/**/*"
  - "node_modules/**/*"
  - "!node_modules/*/{CHANGELOG.md,README.md,README,readme.md,readme}"
  - "!node_modules/*/{test,__tests__,tests,powered-test,example,examples}"
  - "!node_modules/*.d.ts"
  - "!node_modules/.bin"
  - "!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}"
  - "!.editorconfig"
  - "!**/._*"
  - "!**/{.DS_Store,.git,.hg,.svn,CVS,RCS,SCCS,.gitignore,.gitattributes}"
  - "!**/{__pycache__,thumbs.db,.flowconfig,.idea,.vs,.nyc_output}"
  - "!**/{appveyor.yml,.travis.yml,circle.yml}"
  - "!**/{npm-debug.log,yarn.lock,.yarn-integrity,.yarn-metadata.json}"

# Extra Ressourcen
extraResources:
  - from: ".env.example"
    to: ".env.example"
  - from: "README.md"
    to: "README.md"

# Kompressionslevel
compression: normal

# Auto-Update Konfiguration (optional für zukünftige Versionen)
publish:
  provider: generic
  url: "https://updates.shirtful.com/rfid-qr-wareneingang/"

# =============================================================================
# WINDOWS KONFIGURATION
# =============================================================================

win:
  target:
    - target: nsis
      arch:
        - x64
        - ia32
  icon: "build/icon.ico"
  requestedExecutionLevel: asInvoker
  certificateFile: null # Für Code-Signing falls gewünscht
  certificatePassword: null
  verifyUpdateCodeSignature: false

  # App Details
  legalTrademarks: "Shirtful GmbH"
  fileVersion: "1.0.0"
  productVersion: "1.0.0"

# NSIS Installer Konfiguration
nsis:
  oneClick: false
  allowElevation: true
  allowToChangeInstallationDirectory: true
  installerIcon: "build/installer.ico"
  uninstallerIcon: "build/uninstaller.ico"
  installerHeaderIcon: "build/installerHeader.ico"
  createDesktopShortcut: always
  createStartMenuShortcut: true
  shortcutName: "RFID QR Wareneingang"

  # Installer Sprache
  language: "1031" # Deutsch

  # Installer Konfiguration
  artifactName: "${productName} Setup ${version}.${ext}"

  # Installationsverzeichnis
  warningsAsErrors: false

  # Uninstaller
  deleteAppDataOnUninstall: false

  # Multi-User Installation
  perMachine: false

  # License
  license: null # "build/license.txt" falls Lizenz-Datei vorhanden

  # Installer Seiten
  welcomeTitle: "Willkommen zum ${productName} Setup"

  # Menuverzeichnis
  menuCategory: "Shirtful"

  # Registry Einträge
  include: null

# =============================================================================
# PLATTFORM-SPEZIFISCHE BUILDS
# =============================================================================

# macOS (optional für zukünftige Cross-Platform Versionen)
mac:
  target:
    - target: dmg
      arch:
        - x64
        - arm64
  icon: "build/icon.icns"
  category: public.app-category.business
  hardenedRuntime: true
  gatekeeperAssess: false
  entitlements: null
  entitlementsInherit: null

# macOS DMG
dmg:
  title: "${productName} ${version}"
  icon: "build/volume.icns"
  background: "build/background.png"
  window:
    width: 540
    height: 380
  contents:
    - x: 140
      y: 225
      type: file
    - x: 400
      y: 225
      type: link
      path: "/Applications"

# Linux (optional)
linux:
  target:
    - target: AppImage
      arch:
        - x64
    - target: deb
      arch:
        - x64
  icon: "build/icon.png"
  category: Office
  synopsis: "RFID QR Wareneingang System"
  description: "Desktop-Anwendung für RFID-basierte Zeiterfassung und QR-Code Wareneingang"

# Linux AppImage
appImage:
  artifactName: "${productName}-${version}.${ext}"

# Debian Package
deb:
  priority: optional
  depends:
    - gconf2
    - gconf-service
    - libnotify4
    - libappindicator1
    - libxtst6
    - libnss3

# =============================================================================
# ENTWICKLUNG & DEBUGGING
# =============================================================================

# Debugging
npmRebuild: true
nodeGypRebuild: false

# Build Cache
buildDependenciesFromSource: false

# Metadaten
metadata:
  author:
    name: "Shirtful GmbH"
    email: "support@shirtful.com"
  homepage: "https://www.shirtful.com"
  description: "RFID-basierte Zeiterfassung und QR-Code Wareneingang für moderne Produktionsbetriebe"
  keywords:
    - "rfid"
    - "qr-code"
    - "wareneingang"
    - "zeiterfassung"
    - "electron"
    - "desktop"

# =============================================================================
# ERWEITERTE KONFIGURATION
# =============================================================================

# Protokoll Handler (für deep linking)
protocols:
  name: "rfid-qr"
  schemes:
    - "rfid-qr"

# Dateierweiterungen
fileAssociations:
  - ext: "rqr"
    name: "RFID QR Export"
    description: "RFID QR Wareneingang Datenexport"
    icon: "build/fileIcon.ico"

# Umgebungsvariablen für Build
extraMetadata:
  build:
    timestamp: "2024-06-21"
    version: "1.0.0"
    environment: "production"

# =============================================================================
# BEISPIEL BUILD COMMANDS
# =============================================================================

# Verfügbare Build-Befehle:
# npm run build              # Alle Plattformen
# npm run build:win          # Nur Windows
# npm run build:win32        # Windows 32-bit
# npm run build:win64        # Windows 64-bit
# npm run build:mac          # Nur macOS
# npm run build:linux        # Nur Linux
# npm run dist               # Distribution erstellen
# npm run dist:dir           # Unpacked Version
# npm run pack               # Ohne Installer

# =============================================================================
# NOTIZEN & ANFORDERUNGEN
# =============================================================================

# Erforderliche Build-Assets (in build/ Verzeichnis):
# - icon.ico (256x256, Windows Icon)
# - installer.ico (für NSIS Installer)
# - uninstaller.ico (für NSIS Uninstaller)
# - installerHeader.ico (für Installer Header)
# - icon.icns (macOS Icon, falls benötigt)
# - volume.icns (macOS DMG Volume Icon)
# - background.png (macOS DMG Background)
# - icon.png (Linux Icon)
# - license.txt (optional, Lizenz-Text)

# Code-Signing (optional für Produktion):
# 1. Zertifikat von vertrauenswürdiger CA besorgen
# 2. certificateFile und certificatePassword konfigurieren
# 3. Umgebungsvariablen CSC_LINK und CSC_KEY_PASSWORD setzen

# Auto-Update Setup:
# 1. Update-Server einrichten (generic provider)
# 2. HTTPS-Endpoint für latest.yml konfigurieren
# 3. electron-updater in main.js integrieren

# Performance-Optimierung:
# - Unnötige node_modules mit !-Pattern ausschließen
# - Kompression auf maximum setzen für kleinere Installer
# - Target-Architekturen nach Bedarf reduzieren

# Multi-Language Support:
# - Installer-Sprachen in nsis.language konfigurieren
# - Lokalisierte Strings in separaten Files

# Enterprise Deployment:
# - MSI-Target für Windows Group Policy
# - Silent Installation Parameter
# - Registry-Einträge für zentrale Konfiguration